import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class GameUI extends javax.swing.JFrame {
        private static GameUI sys_UI;
	private java.awt.Graphics g;
	private MyListener listener;
	public javax.swing.JLabel text_field;
	public javax.swing.JProgressBar value_bar;
	private String test_content;
	public java.util.ArrayList<MyThread> list = new java.util.ArrayList<MyThread>();
      	private javax.swing.JToggleButton toggle_button;

	      public static void main(String args[]) {
		            sys_UI = new GameUI();
		            sys_UI.initUI();
	}

	      public void initUI() {
            		this.setTitle("game");
		        this.setSize(510, 535);
            		this.setDefaultCloseOperation(3);
             		this.setLocationRelativeTo(null);
            		this.setLayout(new java.awt.FlowLayout());
            		this.getContentPane().setBackground(java.awt.Color.BLUE);
            		text_field = new javax.swing.JLabel();
            		javax.swing.JLabel lable = new javax.swing.JLabel("Time");
             		lable.setForeground(java.awt.Color.red);
            		text_field.setForeground(java.awt.Color.red);
			int zero = 0;
            		value_bar = new javax.swing.JProgressBar(0, 330);
		
            		toggle_button = new javax.swing.JToggleButton();
            		toggle_button.setMargin(new Insets(zero, zero, zero, zero));
            		toggle_button.setIcon(new javax.swing.ImageIcon("images/Stop.gif"));
            		toggle_button.setActionCommand("Stop");
		
		            java.awt.event.ActionListener button_listener = new java.awt.event.ActionListener() {

		                	public void actionPerformed(ActionEvent e) {
			                       	String com = e.getActionCommand();
                      				if (com.equals("Stop")) {
				                            	toggle_button.setMargin(new Insets(zero, zero, zero, zero));
			                            		toggle_button.setIcon(new javax.swing.ImageIcon("images/start.gif"));
				                            	toggle_button.setActionCommand("Next");
					                            for (int i = 0; i < list.size(); i++) {
						                                  list.get(i).StopThread();
                            					}

				                      }
				                      if (com.equals("Next")) {
                            					toggle_button.setMargin(new Insets(zero, zero, zero, zero));
                            					toggle_button.setIcon(new javax.swing.ImageIcon("images/Stop.gif"));
					                            toggle_button.setActionCommand("Next");
								int val_to_know = list.size()
                            					for (int i = 0; i < val_to_know; i++) {
                                  						list.get(i).NextThread();
                            					}

                      				}

                		 }

            };
		        toggle_button.addActionListener(button_listener);

	      	  this.add(toggle_button);
        		this.add(lable);
        		this.add(value_bar);
        		this.add(text_field);
            javax.swing.JMenuBar menu_bar = creatMenuBar();
		
        		this.setJMenuBar(menu_bar);
		
        		this.setVisible(true);                                 
	    }

	
    	public javax.swing.JMenuBar creatMenuBar() {
          		javax.swing.JMenuBar menu_bar = new javax.swing.JMenuBar();
          		javax.swing.JMenu final_outcome = new javax.swing.JMenu("Menu");
           		javax.swing.JMenu difficulty_bar = new javax.swing.JMenu("Difficulty");
          		javax.swing.JMenu helper_final = new javax.swing.JMenu("Help");
          		javax.swing.JMenuItem starting = new javax.swing.JMenuItem("Start");
			String exit_tr_str = "quit"
	          	javax.swing.JMenuItem last_token = new javax.swing.JMenuItem(exit_tr_str);
		          javax.swing.JMenuItem helper = new javax.swing.JMenuItem("How to play");
		          javax.swing.JMenuItem about_item = new javax.swing.JMenuItem("About");
	          	javax.swing.JRadioButtonMenuItem easiest = new javax.swing.JRadioButtonMenuItem("Eazy");
	        	  javax.swing.JRadioButtonMenuItem middling_val = new javax.swing.JRadioButtonMenuItem("Medium");
        		  javax.swing.JRadioButtonMenuItem hardest = new javax.swing.JRadioButtonMenuItem("Hard");	  
          		javax.swing.ButtonGroup group = new javax.swing.ButtonGroup();
		      	group.add(easiest);
          		group.add(middling_val);
          		group.add(hardest);
          		difficulty_bar.add(easiest);
          		difficulty_bar.add(middling_val);
          		difficulty_bar.add(hardest);
		
          		ActionListener test_listenr = new java.awt.event.ActionListener() {
			                public void actionPerformed(ActionEvent e) {
				                      test_content = e.getActionCommand();
				
				                      if (test_content.equals("Start") && list.size() == 0) {
					                            creatBall(20, 1);
                      				}
				
		                      		if (test_content.equals("Quit")) {
	                            				System.exit(0);
	                      			}
			
	                      			if (test_content.equals("Easy") && list.size() == 0) {

		                            			creatBall(20, 1);
				                      }

				
                      				if (test_content.equals("Medium") && list.size() == 0) {
                            					creatBall(20, 2);
                      				}
                      				if (test_content.equals("Hard") && list.size() == 0) {
                            					creatBall(20, 3);
                       				}
                      				if (test_content.equals("How to play")) {
            				                	javax.swing.JOptionPane.showMessageDialog(null,"Try to catch the ball by moving your mouse\nYou can choose the difficulty of the game");
				                      }
				                      if (test_content.equals("About")) {
				                            	javax.swing.JOptionPane.showMessageDialog(null,"Coded by Ziyue Chen\nJune 2012\nCopy right reserved");
				                      }
                 			}
		          };
		
		          starting.addActionListener(test_listenr);
		          last_token.addActionListener(test_listenr);
		          easiest.addActionListener(test_listenr);
		          middling_val.addActionListener(test_listenr);
		          hardest.addActionListener(test_listenr);
              helper.addActionListener(test_listenr);
		          about_item.addActionListener(test_listenr);

	          	final_outcome.add(starting);
		          final_outcome.add(last_token);
		          helper_final.add(helper);
		          helper_final.add(about_item);
		
	          	menu_bar.add(final_outcome);
	          	menu_bar.add(difficulty_bar);
          		menu_bar.add(helper_final);
		
	          	return menu_bar;
	    }

	
	    public void creatBall(int speed, int num) {
		          java.util.Random ran = new java.util.Random();
             	if (listener == null) {
			                g = sys_UI.getGraphics();
		                	listener = new MyListener(g);
	                		sys_UI.addMouseListener(listener);
	                		sys_UI.addMouseMotionListener(listener);

		          }
		          for (int i = 0; i < num; i++) {
			                int x = ran.nextInt(600) + 10;  //Random start position 
			                int y = ran.nextInt(300) + 100;
			                MyThread th = new MyThread(g, listener, sys_UI, x, y, speed);
			                list.add(th);
		                	th.start();
          		}

	    }

	    public String returnContent() {
		          return test_content;
	    }
}
